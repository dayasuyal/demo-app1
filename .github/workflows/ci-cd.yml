name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -----------------------
  # SonarCloud Static Analysis
  # -----------------------
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH
          echo "SonarScanner installed at $PWD/sonar-scanner-5.0.1.3006-linux/bin"

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        run: |
          export PATH=$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH
          sonar-scanner \
            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
            -Dsonar.organization=${SONAR_ORG} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN}

  # -----------------------
  # Docker Build & Push
  # -----------------------
  build-and-push:
    runs-on: ubuntu-latest
    needs: sonar-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ github.sha }}

  # -----------------------
  # Deploy Docker Image
  # -----------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ github.sha }}

      - name: Run Docker container
        run: |
          # Stop existing container if running
          docker stop demo-app || true
          docker rm demo-app || true
          # Run new container
          docker run -d --name demo-app -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/demo-app:${{ github.sha }}

